{"version":3,"sources":["components/Paper/Paper.jsx","components/Paper/index.js","components/AppBar/index.js","components/AppBar/AppBar.jsx","components/SearchBar/SearchBar.jsx","components/SearchBar/index.js","components/Card/index.js","components/Card/Card.jsx","components/Pagination/Pagination.jsx","App.js","hooks/useMovieSearch.js","reportWebVitals.js","index.js"],"names":["Paper","props","className","children","style","elevation","rootCls","classNames","AppBar","others","SearchBar","useState","focus","setFocus","query","setQuery","onSearch","placeholder","paperOthers","type","onFocus","onBlur","onChange","event","target","value","onKeyUp","key","title","onClick","color","name","Card","subtitle","image","width","onError","e","onerror","src","alt","Pagination","total","active","display","pages","Array","fill","map","p","i","page","index","Logo","App","Math","floor","random","setPage","useQuery","params","apikey","s","queryStr","Object","keys","encodeURIComponent","join","fetch","then","res","json","data","status","useMovieSearch","Response","Search","movie","Title","Year","Poster","imdbID","Error","ceil","totalResults","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.8af30994.chunk.js","sourcesContent":["import classNames from 'classnames';\r\n\r\nfunction Paper (props) {\r\n\r\n\tconst {\r\n\t\tclassName,\r\n\t\tchildren,\r\n\t\tstyle,\r\n\t\televation = 1,\t// shadow level of paper, value = [0,5]\r\n\t} = props;\r\n\r\n\tlet rootCls = classNames('default-paper', className, {\r\n\t\t'shadow-none': elevation === 0,\r\n\t\t'shadow-sm': elevation === 1,\r\n\t\t'shadow-md': elevation === 2, \r\n\t\t'shadow-lg': elevation === 3, \r\n\t\t'shadow-xl': elevation === 4, \r\n\t\t'shadow-2xl': elevation === 5, \r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className={rootCls} style={style}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\n\r\nPaper.propTypes = {\r\n\televation: function(props, propName, componentName){\r\n\t\tlet value = props[propName];\r\n\t\t// check props is provided and value is between [0, 5]\r\n\t\tif ( value && (!Number.isInteger(value) || value < 0 || value > 5) ){\r\n\t\t\treturn new Error('Invalid prop `' + propName + '` supplied to' +\r\n\t\t\t' `' + componentName + '`. Value must be >= 0 and <= 5 ')\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Paper;","import Paper from './Paper';\r\n\r\nexport default Paper;","import AppBar from './AppBar';\r\n\r\nexport default AppBar;","import classNames from \"classnames\";\r\nimport Paper from \"../Paper\";\r\n\r\nexport default function AppBar (props) {\r\n\r\n\tconst {\r\n\t\tclassName,\r\n\t\tchildren,\r\n\t\tstyle,\r\n\t\t...others\r\n\t} = props;\r\n\r\n\tlet rootCls = classNames('default-appBar', className);\r\n\r\n\treturn (\r\n\t\t<Paper className={rootCls} style={style} {...others}>\r\n\t\t\t{children}\r\n\t\t</Paper>\r\n\t);\r\n\r\n}","import classNames from \"classnames\";\r\nimport 'boxicons';\r\nimport { useState } from \"react\";\r\nimport Paper from '../Paper';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction SearchBar (props) {\r\n\r\n\tlet [ focus, setFocus ] = useState(false);\r\n\tlet [ query, setQuery ] = useState('');\r\n\r\n\tconst {\r\n\t\tclassName,\r\n\t\tstyle,\r\n\t\tonSearch,\r\n\t\tplaceholder = 'search',\r\n\t\t...paperOthers\r\n\t} = props;\r\n\r\n\tlet rootCls = classNames( 'default-searchBar', className, {\r\n\t\t'border-primary': focus,\r\n\t});\r\n\r\n\tconst handleChange = function(event){\r\n\t\tsetQuery(event.target.value);\r\n\t}\r\n\r\n\tconst handleEnter = function(event){\r\n\t\tif(!query) return;\r\n\t\tif(event.key === 'Enter') {\r\n\t\t\tonSearch(event, event.target.value)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSearch = function(event){\r\n\t\tif(!query) return;\r\n\t\tonSearch(event, query);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Paper className={rootCls} style={style} {...paperOthers}>\r\n\t\t\t<input className=\"focus:outline-none\" type=\"text\" \r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tonFocus={() => setFocus(true)} \r\n\t\t\t\tonBlur={() => setFocus(false)}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tonKeyUp={handleEnter}\r\n\t\t\t\tvalue={query}\r\n\t\t\t\ttitle=\"search-input\"\r\n\t\t\t/>\r\n\t\t\t<button className=\"flex items-center text-primary\" onClick={handleSearch} title=\"search-btn\">\r\n\t\t\t\t<box-icon color=\"#7faae4\" name=\"search\"></box-icon>\r\n\t\t\t</button>\r\n\t\t</Paper>\r\n\t);\r\n\r\n}\r\n\r\nSearchBar.propTypes = {\r\n\tonSearch: PropTypes.func,\r\n\tplaceholder: PropTypes.string\r\n};\r\n\r\nexport default SearchBar;","import SearchBar from './SearchBar';\r\n\r\nexport default SearchBar;","import Card from \"./Card\";\r\n\r\nexport default Card;","import Paper from '../Paper';\r\nimport classNames from \"classnames\";\r\nimport './Card.css';\r\n\r\nexport default function Card (props) {\r\n\r\n\tconst {\r\n\t\tclassName,\r\n\t\tstyle,\r\n\t\ttitle,\r\n\t\tsubtitle,\r\n\t\timage,\r\n\t\tchildren\r\n\t} = props;\r\n\r\n\tlet rootCls = classNames('default-card', className);\r\n\r\n\treturn (\r\n\t\t<Paper elevation={2} className={rootCls} style={style}>\r\n\r\n\t\t\t{image && \r\n\t\t\t\t<div className=\"relative\">\r\n\t\t\t\t\t<div className=\"img-holder\" style={{width:150}}>\r\n\t\t\t\t\t\t<img \r\n\t\t\t\t\t\t\tonError={(e)=>{e.target.onerror = null; e.target.src=\"https://i.stack.imgur.com/y9DpT.jpg\"}}\r\n\t\t\t\t\t\t\tclassName=\"w-40 min-w-full max-w-full h-full rounded-tl-md rounded-bl-md\" \r\n\t\t\t\t\t\t\talt={title}\r\n\t\t\t\t\t\t\tsrc={image} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t<div className=\"flex flex-col p-2 items-start flex-grow\">\r\n\t\t\t\t<h2 className=\"text-heading font-bold text-primary max-h-20 overflow-ellipsis overflow-hidden\">{title}</h2>\r\n\t\t\t\t<div className=\"flex-grow text-gray-400\">{subtitle}</div>\r\n\t\t\t\t<div>{children}</div>\r\n\t\t\t</div>\r\n\r\n\t\t</Paper>\r\n\t);\r\n}","import classNames from \"classnames\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Pagination (props) {\r\n\r\n\tconst {\r\n\t\ttotal,\t\t\t\t// total number of pages \r\n\t\tactive = 1,\t\t// current active page\r\n\t\tdisplay = 5, \t// how many pages to display in a row\r\n\t\tonClick,\t\t\t// callback upon click on page\r\n\t\tstyle,\r\n\t\tclassName\r\n\t} = props;\r\n\r\n\tlet rootCls = classNames('default-pagination', className);\r\n\r\n\t// an array of pages to be displayed\r\n\tlet pages = new Array(total < display ? total : display).fill(0).map((p,i) => {\r\n\t\tif(total < display) return i+1;\r\n\t\treturn active+display > total ?  total-display+1 + i : active + i ;\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className={rootCls} style={style}>\r\n\t\t\t{\r\n\t\t\t\tpages.map((page,index) => (\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tclassName={classNames(\"bg-white mx-2 p-2\", {'bg-primary text-white': page===active})} \t\t\t\r\n\t\t\t\t\t\tonClick={(e) => onClick && onClick(e, page)}\t\t\r\n\t\t\t\t\t>{page}</button>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\n\r\nPagination.propTypes = {\r\n\ttotal: PropTypes.number.isRequired,\r\n\tactive: PropTypes.number,\r\n\tdisplay: PropTypes.number,\r\n\tonClick: PropTypes.func\r\n}\r\n\r\nexport default Pagination;","import AppBar from './components/AppBar';\r\nimport SearchBar from './components/SearchBar';\r\nimport Card from './components/Card';\r\nimport Pagination from './components/Pagination/Pagination';\r\nimport { useState } from 'react';\r\nimport { useMovieSearch } from './hooks';\r\n\r\n/**\r\n * Logo Component\r\n */\r\nconst Logo = function (){\r\n  return (\r\n    <div className=\"flex flex-col text-heading font-bold leading-4 inline-block\" >\r\n      <span className=\"text-primary\">hey</span>\r\n      <span className=\"text-secondary\">cinema</span>\r\n    </div>\r\n  );\r\n}\r\n\r\n/**\r\n * App Component\r\n */\r\nfunction App() {\r\n\r\n  // to randomly generate the initial page\r\n  let keywrods = ['fast', 'ghost', 'police', 'impossible', 'fire', 'lie', 'high', 'gun', 'flight', 'sky'];\r\n  // movie title to search\r\n  let [ query, setQuery ] = useState(keywrods[Math.floor((Math.random() * 10))]);\r\n  // current page\r\n  let [ page, setPage ] = useState(1);\r\n  // query omdbapi\r\n  let [ data, status ] = useMovieSearch({query, page}); \r\n\r\n  /**\r\n   * Callback when search is trigger by clicking button or Enter\r\n   * @param {Event} e \r\n   * @param {string} query \r\n   */\r\n  const handleSearch = (e, query) => {\r\n    setPage(1); // reset page to 1\r\n    setQuery(query);\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-full w-full\">\r\n      <AppBar elevation={2} className=\"rounded-bl-md rounded-br-md p-3 box-border w-full\">\r\n        <Logo />\r\n        <div className=\"flex-grow\"></div>\r\n      </AppBar>\r\n      <div className='m-6'>\r\n        <div className=\"flex float-right mb-4\">\r\n          <SearchBar elevation={2} className=\"rounded-md p-2\" onSearch={handleSearch} placeholder=\"search movies\" />\r\n        </div>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 clear-right\">\r\n\r\n          { status === 'loading' && \r\n            <div> loading... </div>\r\n          }\r\n\r\n          { status === 'success' && \r\n            ( data.Response === 'True' ?\r\n              data.Search.map(movie => \r\n                <Card \r\n                  key={movie.imdbID}\r\n                  title={movie.Title} \r\n                  subtitle={movie.Year} \r\n                  image={movie.Poster}></Card>\r\n              ) : \r\n              <div> {data.Error} </div>\r\n            )\r\n          }\r\n\r\n          { status === 'error' && \r\n            <div className=\"text-red-400\">Failed to fetch data!</div> \r\n          }\r\n          \r\n        </div>\r\n\r\n        {\r\n          status === 'success' && data.Response === 'True' &&\r\n          <Pagination \r\n            total={Math.ceil(data.totalResults/10)} \r\n            display={10} \r\n            active={page} \r\n            onClick={(e, page) => setPage(page)}\r\n          />\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useQuery } from 'react-query';\r\n\r\nexport default function useMovieSearch ( { query , page } ) {\r\n\r\n\tlet { data, status } = useQuery( [query, page], () => {\r\n\r\n\t\tlet params = {\r\n\t\t\tapikey: '3bedb77a', // WARNING! You should never hardcoded your credential on client side, here is for the simplicity sake only.\r\n\t\t\ts: query,\r\n\t\t\tpage\r\n\t\t};\r\n\r\n\t\tlet queryStr = Object.keys(params).map(key => key + '=' + encodeURIComponent(params[key]) ).join('&');\r\n\r\n    return fetch(`http://www.omdbapi.com/?${queryStr}`).then(res => res.json());\r\n  });\r\n\r\n\treturn [data, status];\r\n\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { \n  QueryClient,\n  QueryClientProvider\n} from 'react-query';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n     <QueryClientProvider client={queryClient}>\n      <App />\n     </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}